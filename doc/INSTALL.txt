## Joruri Mail Simple One v1.3.0 インストールマニュアル       2014.6.3

**********************************************************************
 1 想定環境
**********************************************************************

[システム]
OS         : CentOS 6.5
Webサーバ  : Apache 2.2
DBシステム : MySQL 5
Ruby       : 1.9.2
Rails      : 3.0.0
SMTPサーバ : Postfix 2.6.6
IMAP4サーバ: 2.0.9

[設定]
IPアドレス : 192.168.0.2
ドメイン   : 192.168.0.2

**********************************************************************
 2 CentOS のインストール
**********************************************************************

CentOSをインストールします。

※インストール完了後、ご利用になられる環境に合わせて適切なセキュリティ設定をお願いします。CentOSに関するセキュリティ設定については、本マニュアルの範囲外となります。

rootユーザに変更します。

  $ su -

**********************************************************************
 3 事前準備
**********************************************************************

必要なパッケージをインストールします。

  # yum -y install \
  #   wget make gcc-c++ \
  #   libxslt libxslt-devel libxml2-devel \
  #   libjpeg-devel libpng-devel \
  #   librsvg2-devel ghostscript-devel \
  #   ImageMagick ImageMagick-devel \
  #   curl-devel \
  #   shared-mime-info \
  #   httpd httpd-devel \
  #   mysql-server mysql-devel

必要なパッケージをダウンロードします。

  # cd /usr/local/src
  # wget http://joruri.org/download/jorurimail/jorurimail-1.3.0.tar.gz
  # wget http://ftp.ruby-lang.org/pub/ruby/ruby-1.9.2-p320.tar.gz
  # wget http://production.cf.rubygems.org/rubygems/rubygems-1.6.2.tgz

Joruriユーザを作成します。

  # groupadd -g 5000 joruri
  # useradd -u 5000 -g 5000 joruri
  # passwd joruri

Joruriソースコードを設置します。

  # mkdir /var/share
  # cd /var/share
  # git clone https://github.com/kisugon/jorurimail-simpleone.git
  # chown -R joruri:joruri /var/share/jorurimail

**********************************************************************
 4 Apache の設定
**********************************************************************

設定ファイルを編集します。

  # vi /etc/httpd/conf/httpd.conf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  ServerName 192.168.0.2    #変更
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

設定ファイルにエラーがないことを確認し、Apacheを起動します。

  # /sbin/service httpd configtest
  # /sbin/service httpd start

自動起動に設定します。

  # /sbin/chkconfig httpd on

**********************************************************************
 5 MySQL の設定
**********************************************************************

文字エンコーディングの標準を UTF-8 に設定します。

  # vi /etc/my.cnf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  [mysqld]
  default-character-set=utf8    #追加
  
  [client]                      #追加（末尾に追加）
  default-character-set=utf8    #追加
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

MySQLを起動します。

  # /usr/bin/mysql_install_db --user=mysql
  # /sbin/service mysqld start

自動起動に設定します。

  # /sbin/chkconfig mysqld on
  
rootユーザのパスワードを設定します。
  # /usr/bin/mysqladmin -u root password "pass"

joruriユーザを作成します。
  # /usr/bin/mysql -u root -ppass \
  #   -e "grant all on *.* to joruri@localhost IDENTIFIED BY 'pass'"

**********************************************************************
 6 Ruby on Rails のインストール
**********************************************************************

======================================================================
 6.1 Ruby, RubyGems のインストール
======================================================================

Rubyをインストールします。

  # cd /usr/local/src
  # tar xvzf ruby-1.9.2-p320.tar.gz
  # cd ruby-1.9.2-p320

ext/openssl/ossl_pkey_ec.cを修正します。

  # vi ext/openssl/ossl_pkey_ec.c

  ***************
  *** 761,768 ****
  --- 761,770 ----
                    method = EC_GFp_mont_method();
                } else if (id == s_GFp_nist) {
                    method = EC_GFp_nist_method();
  + #if !defined(OPENSSL_NO_EC2M)
                } else if (id == s_GF2m_simple) {
                    method = EC_GF2m_simple_method();
  + #endif
                }
  
                if (method) {
  ***************
  *** 815,822 ****
  --- 817,826 ----
  
                if (id == s_GFp) {
                    new_curve = EC_GROUP_new_curve_GFp;
  + #if !defined(OPENSSL_NO_EC2M)
                } else if (id == s_GF2m) {
                    new_curve = EC_GROUP_new_curve_GF2m;
  + #endif
                } else {
                    rb_raise(rb_eArgError, "unknown symbol, must be :GFp or :GF2m");
                }


  # ./configure
  # make && make install

RubyGemsをインストールします。

  # cd /usr/local/src
  # tar xvzf rubygems-1.6.2.tgz
  # cd rubygems-1.6.2
  # ruby setup.rb

======================================================================
 6.2 gemライブラリ のインストール
======================================================================

Ruby on Rails をインストールします。

  # gem install rails -v 3.0.0
  
必要ライブラリをインストールします。

  # cd /var/share/jorurimail
  # bundle install

======================================================================
 6.3 Phusion Passenger のインストール
======================================================================

Phusion Passengerをインストールします。

  # gem install passenger -v 3.0.9
  # passenger-install-apache2-module
  
  ( 画面の内容を確認して Enterキーを押してください。 )

Apacheに設定を追加します。

  # cp /var/share/jorurimail/config/samples/passenger.conf \
  #   /etc/httpd/conf.d/

**********************************************************************
  7 Joruri のインストール
**********************************************************************

Joruriユーザに変更します。

  # su - joruri
  $ cd /var/share/jorurimail

======================================================================
 8.1 設定ファイル
======================================================================

環境に応じて設定ファイルを編集します。

Joruri Mail 基本設定

  $ vi config/core.yml
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  title  : Joruri Mail
  uri    : http://192.168.0.2/
  proxy  : ※プロキシ
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  
  ※プロキシ
  プロキシサーバが導入されている場合は
  http://example:8080/ の様に記述してください。

DB接続情報

  $ vi config/database.yml

SMTP, IMAPサーバ設定

  $ vi config/environments/development.rb

VirtualHost設定

  $ vi config/virtual-hosts/jorurimail.conf

======================================================================
 8.2 データベースの作成
======================================================================

データベースを作成します。

  $ /usr/bin/mysql -u root -ppass -e "create database jorurimail"

テーブルを作成します。

  $ rake db:schema:load RAILS_ENV=development

初期データを登録します。

  $ rake db:seed RAILS_ENV=development

======================================================================
 8.3 VirtualHost の反映
======================================================================

Apacheに設定を追加します。
  $ su -
  # cp /var/share/jorurimail/config/samples/jorurimail.conf \
  #   /etc/httpd/conf.d/

Apache を再起動します。
  # /sbin/service httpd configtest
  # /sbin/service httpd restart


ここまでの手順で Joruri Mail にアクセスすることができます。

  メーラ画面 : http://192.168.0.2/


管理画面にアクセスしてユーザを作成してください。

**********************************************************************
 9 Postfixのインストール
**********************************************************************

既存のPostfixを削除します。

  # /etc/init.d/postfix stop
  # rpm -e --nodeps postfix

Postfixをビルドしてインストールします。

  # wget "http://vault.centos.org/6.5/os/Source/SPackages/\
  >postfix-2.6.6-2.2.el6_1.src.rpm"
  # rpm -ivh postfix-2.6.6-2.2.el6_1.src.rpm
  # cd /usr/local/src
  # wget "http://vda.sourceforge.net/VDA/postfix-2.6.5-vda-ng.patch.gz"
  # gunzip postfix-2.6.5-vda-ng.patch.gz
  # cp postfix-2.6.5-vda-ng.patch ~/rpmbuild/SOURCES/postfix-2.6.5-vda.patch
  # cp /var/share/jorurimail/config/samples/postfix/postfix.spec \
  > ~/rpmbuild/SPECS/
  # yum install -y pcre-devel db4-devel openldap-devel \
  > cyrus-sasl-devel  mysql-devel
  # rpmbuild -ba ~/rpmbuild/SPECS/postfix.spec
  # rpm -ivh ~/rpmbuild/RPMS/x86_64/postfix-2.6.6-2.2.el6.x86_64.rpm
  
  # vi /etc/yum.conf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  exclude=postfix*
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Postfixを設定します。

  # cp /var/share/jorurimail/config/samples/postfix/*.cf \
  > /etc/postfix/
  # cp -R /var/share/jorurimail/config/samples/postfix/joruri \
  > /etc/postfix/
  (ファイル中のpasswordを変更してください)


  # /etc/init.d/postfix start
  # chkconfig postfix on

**********************************************************************
 10 Dovecotのインストール
**********************************************************************

Dovecotをインストールします。

  # yum -y install dovecot dovecot-mysql
  
Dovecotを設定します。

  # cp /var/share/jorurimail/config/samples/dovecot/dovecot.conf \
  > /etc/dovecot/
  # cp /var/share/jorurimail/config/samples/dovecot/dovecot-sql.conf.ext \
  > /etc/dovecot/
  (ファイル中のpasswordを変更してください)
  # cp //var/share/jorurimail/config/samples/dovecot/conf.d/* \
  > /etc/dovecot/conf.d/

  # /etc/init.d/dovecot start
  # chkconfig dovecot on

**********************************************************************
